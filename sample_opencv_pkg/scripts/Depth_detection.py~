#! /usr/bin/env python

import rospy
import cv2
import cv2.cv as cv
from sensor_msgs.msg import Image, CameraInfo
from cv_bridge import CvBridge, CvBridgeError
import numpy as np
import time
frame = None

def Imagecallback(ros_image):
    global frame
    bridge = CvBridge()
    frame = bridge.imgmsg_to_cv2(ros_image, "32FC1")
    frame = np.array(frame, dtype=np.float32)
    cv2.normalize(frame, frame, 0, 1, cv2.NORM_MINMAX)
    cv2.imshow('frame', frame)
    cv.WaitKey(5)
    frame = cv2.resize(frame, (0, 0), fx=0.02, fy=0.1)
    # cv2.namedWindow('frame', cv2.WINDOW_NORMAL)
    # print frame.shape
    # print frame
    # print"%.4f" % np.max(frame)


if __name__ == '__main__':
    try:
        rospy.init_node("Edge_detetcion")
        image_sub = rospy.Subscriber("/kinect2/sd/image_depth_rect", Image, Imagecallback)
        while True:
            str2 = raw_input("Waiting: ")
            file1 = open('depth%s' % time.time() + '.txt', 'w+')
            for row in frame:
                file1.write("[")
                for element in row:
                    file1.write(str("%.2f" % element) + "\t")
                file1.write("]\n")
        rospy.spin()
    except KeyboardInterrupt:
        print"Shutting down vision node."
        cv.DestroyAllWindows()
